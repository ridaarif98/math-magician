{"version":3,"sources":["logic/operate.js","components/Calculator.js","logic/calculator.js","pages/Home.js","pages/Qoute.js","images/calculator.png","pages/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","CalculatorDesign","useState","total","next","inputs","setInput","handleChange","e","obj","buttonName","test","target","name","match","includes","parseFloat","className","map","btn","type","value","onClick","Home","Qoute","Navbar","src","logo","alt","id","path","text","link","to","App","props","state","res","this","exact","Calculator","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa504b8.chunk.js","sourcesContent":["import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne);\n  const two = Big(numberTwo);\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    if (numberTwo === '0') {\n      return 'Error';\n    }\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    if (numberTwo === '0') {\n      return 'Error';\n    }\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React, { useState } from 'react';\r\nimport calculate from '../logic/calculator';\r\n\r\nfunction CalculatorDesign() {\r\n  const [inputs, setInput] = useState({ total: 0, next: null, operation: null });\r\n\r\n  const handleChange = (e) => {\r\n    // spread opertae map event values to object that we pass to function\r\n    const test = { ...inputs, ...calculate(inputs, e.target.name) };\r\n    setInput(() => ({ ...test }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculateDiv\">\r\n      <h3>Let's do some Math!</h3>\r\n    <ul className=\"mainList\">\r\n      <li>\r\n        <ul className=\"resultList\">\r\n          <li>\r\n            {inputs.total}\r\n            {inputs.operation}\r\n            {inputs.next}\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <ul className=\"buttonList\">\r\n          {['AC', '+/-', '%', 'รท'].map((btn) => (<li key={btn}><button type=\"button\" className=\"calculateBtn\" name={btn} value={btn} onClick={handleChange}>{btn}</button></li>))}\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <ul className=\"buttonList\">\r\n          {['7', '8', '9', 'x'].map((btn) => (<li key={btn}><button type=\"button\" className=\"calculateBtn\" name={btn} value={btn} onClick={handleChange}>{btn}</button></li>))}\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <ul className=\"buttonList\">\r\n          {['4', '5', '6', '-'].map((btn) => (<li key={btn}><button type=\"button\" className=\"calculateBtn\" name={btn} value={btn} onClick={handleChange}>{btn}</button></li>))}\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <ul className=\"buttonList\">\r\n          {['1', '2', '3', '+'].map((btn) => (<li key={btn}><button type=\"button\" className=\"calculateBtn\" name={btn} value={btn} onClick={handleChange}>{btn}</button></li>))}\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <ul className=\"buttonListBottom\">\r\n          {['0', '.', '='].map((btn) => (<li key={btn}><button type=\"button\" className=\"calculateBtn\" name={btn} value={btn} onClick={handleChange}>{btn}</button></li>))}\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalculatorDesign;\r\n","import operate from './operate';\r\n\r\nfunction isNumber(item) {\r\n  return !!item.match(/[0-9]+/);\r\n}\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: 0,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { next: obj.next + buttonName };\r\n      }\r\n      return { next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return {};\r\n      }\r\n      return { next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n   <section className=\"homeContent\">\r\n     <h1>\r\n       Welcome to our Page!\r\n     </h1>\r\n     <p>\r\n     \"Math magicians\" is a website for all fans of mathematics. It is a Single Page App (SPA) that allows users to:\r\n       Make simple calculations.\r\n       Read a random math-related quote.\r\n     \r\n     </p>\r\n     <p>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque, minus?\r\n      Consectetur quaerat expedita nulla, reprehenderit illo, in dicta sed\r\n      debitis ratione facilis distinctio accusamus aperiam reiciendis ullam\r\n      excepturi mollitia repellat.\r\n    </p>\r\n    <p>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque, minus?\r\n      Consectetur quaerat expedita nulla, reprehenderit illo, in dicta sed\r\n      debitis ratione facilis distinctio accusamus aperiam reiciendis ullam\r\n      excepturi mollitia repellat.\r\n    </p>\r\n   </section>\r\n  );\r\n}\r\nexport default Home;","import React from \"react\";\r\n\r\nconst Qoute = () => {\r\n  return ( \r\n    <div className=\"quotes\">\r\n      <p>\r\n    Math is not about numbers, equations, computations, or algorithms,\r\n    : it is about understanding. _William Paul Thurston \r\n    </p>\r\n    <p>\r\n    Without mathematics, thereโs nothing you can do. Everything around you is mathematics. Everything around you is numbers.\r\n    โ Shakuntala Devi\r\n    </p>\r\n    </div>\r\n    );\r\n}\r\nexport default Qoute;","export default __webpack_public_path__ + \"static/media/calculator.34fa1a22.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../images/calculator.png\"\r\n\r\nconst Navbar = () => {\r\n  const links = [\r\n    {\r\n        id: 1,\r\n        path: \"/\",\r\n        text: \"Home\",\r\n    },\r\n    {\r\n        id: 2,\r\n        path: \"/calculator\",\r\n        text: \"Calculator\",\r\n    },\r\n    {\r\n      id: 3,\r\n      path: \"/Qoute\",\r\n      text: \"Qoute\",\r\n  },\r\n  ]\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <div>\r\n      <img src={logo} alt=\"logo\"/>\r\n      <h1> Math Magician</h1>\r\n      </div>\r\n      <ul className=\"navBarLink\">\r\n        {links.map(link => {\r\n          return <li key={link.id}>\r\n             <Link to={link.path} className=\"links\"> {link.text}</Link>\r\n            </li>  \r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport { Route, Switch} from 'react-router-dom';\nimport './styles/style.css';\nimport CalculatorDesign from './components/Calculator';\nimport Home from './pages/Home';\nimport Qoute from './pages/Qoute';\nimport Navbar from './pages/Navbar';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { res: '' };\n  }\n\n  render() {\n    const { res } = this.state;\n    return (\n      <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/calculator\">\n          <div>\n            { res }\n            <CalculatorDesign />\n          </div>\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/Qoute\">\n          <Qoute />\n        </Route>\n      </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = ((onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n});\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}